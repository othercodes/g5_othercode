{% extends '@nucleus/partials/particle.html.twig' %}

{% block particle %}
    <div class="terminal" id="{{ id }}">
        <div class="terminal-wrapper" id="{{ id }}-terminal-wrapper"
             style="background-color: {{ particle.background.color }};">
            <div class="terminal-toolbar" id="{{ id }}-terminal-toolbar">
                <div class="terminal-btn btn-close" id="{{ id }}-btn-close" title="Close"></div>
                <div class="terminal-btn btn-minimize" id="{{ id }}-btn-minimize" title="Minimize"></div>
                <div class="terminal-btn btn-maximize" id="{{ id }}-btn-maximize" title="Maximize"></div>
                {{ particle.terminal.title }}
            </div>
            <div class="terminal-screen" id="{{ id }}-terminal-screen">

                {% for item in particle.items %}
                    <div class="term-section" id="term-{{ item.command }}">
                        <p>{{ item.name }}</p>
                        <p>{{ item.output }}</p>
                        <p class="help"><span>Type 'help' + <kbd>Enter</kbd>: for available commands.</span></p>
                    </div>
                {% endfor %}

                <div class="term-section" id="term-error">
                    <p>Command not found!</p>
                    <p class="help"><span>Type 'help' + <kbd>Enter</kbd>: for available commands.</span></p>
                </div>

                <div class="term-section" id="term-help">
                    <h2><span>&raquo; Help?</span></h2>
                    <p class="help"><span>Type [command] + <kbd>Enter</kbd></span></p>
                    <ul>
                        {% for item in particle.items %}
                            <li>'{{ item.command }}': {{ item.description }}</li>
                        {% endfor %}
                        <li>'help': displays this list</li>
                    </ul>
                </div>

                <span class="command">
            <span class="hostname">othercode@asimov</span>:<span class="pwd">~</span>$
            <input type="text" id="terminal-input"
                   style="background-color: {{ particle.background.color }};color: {{ particle.font.color }};"
            />
        </span>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascript_footer %}
    {% if particle.enabled %}
        {{ parent() }}

        <script type="text/javascript">

            (function (e) {
                "use strict";
                e.fn.textTyper = function (t) {
                    var n = {
                        typingClass: "typing",
                        beforeAnimation: function () {
                        },
                        afterAnimation: function () {
                        },
                        speed: 10,
                        nextLineDelay: 400,
                        startsFrom: 0,
                        repeatAnimation: false,
                        repeatDelay: 4e3,
                        repeatTimes: 1,
                        cursorHtml: '<span class="cursor">|</span>'
                    }, r = e.extend({}, n, t);
                    this.each(function () {
                        var t = e(this), n = 1, i = "typingCursor";
                        var s = t, o = s.length, u = [];
                        while (o--) {
                            u[o] = e.trim(e(s[o]).html());
                            e(s[o]).html("")
                        }
                        t.init = function (e) {
                            var n = r.beforeAnimation;
                            if (n) n();
                            t.animate(0)
                        };
                        t.animate = function (o) {
                            var a = s[o], f = r.typingClass, l = r.startsFrom;
                            e(a).addClass(f);
                            var c = setInterval(function () {
                                var f = r.cursorHtml;
                                f = e("<div>").append(e(f).addClass(i)).html();
                                e(a).html(u[o].substr(0, l) + f);
                                l++;
                                if (u[o].length < l) {
                                    clearInterval(c);
                                    o++;
                                    if (s[o]) {
                                        setTimeout(function () {
                                            e(a).html(u[o - 1]);
                                            t.animate(o)
                                        }, r.nextLineDelay)
                                    } else {
                                        e(a).find("." + i).remove();
                                        if (r.repeatAnimation && (r.repeatTimes == 0 || n < r.repeatTimes)) {
                                            setTimeout(function () {
                                                t.animate(0);
                                                n++
                                            }, r.repeatDelay)
                                        } else {
                                            var h = r.afterAnimation;
                                            if (h) h()
                                        }
                                    }
                                }
                            }, r.speed)
                        };
                        t.init()
                    });
                    return this
                }
            })(jQuery)

            jQuery(document).ready(function () {

                let sectionArray = [];
                jQuery('.term-section').each(function (i, e) {
                    sectionArray.push(jQuery(e).attr('id'));
                });

                let terminalInput = jQuery('#terminal-input');
                let errorCommandLayout = jQuery('#term-error');
                let homeCommandLayout = jQuery('#' + sectionArray[0]);

                jQuery('#{{ id }}-btn-close').click(function () {
                    jQuery('#{{ id }}-terminal-wrapper').hide();
                });
                jQuery('#{{ id }}-btn-minimize').click(function () {
                    jQuery('#{{ id }}-terminal-wrapper').addClass('minimized');
                });
                jQuery('#{{ id }}-btn-maximize').click(function () {
                    jQuery('#{{ id }}-terminal-wrapper').removeClass('minimized');
                });

                jQuery('.command').hide();
                terminalInput.focus();

                homeCommandLayout.addClass('open');
                homeCommandLayout.textTyper({
                    speed: 1,
                    afterAnimation: function () {
                        jQuery('.command').fadeIn();
                        terminalInput.focus();
                        terminalInput.val('');
                    }
                });

                terminalInput.keyup(function (e) {
                    if (e.which === 13) {

                        jQuery('.command').hide();
                        let destination = terminalInput.val();

                        jQuery('div[id="term-' + destination + '"]').addClass('open').siblings().removeClass('open');
                        if (jQuery.inArray('term-' + destination, sectionArray) === -1) {
                            errorCommandLayout.addClass('open');
                            errorCommandLayout.siblings().removeClass('open');
                        }

                        jQuery('.open').textTyper({
                            speed: 1,
                            afterAnimation: function () {
                                jQuery('.command').fadeIn();
                                terminalInput.focus();
                                terminalInput.val('');
                            }
                        });
                    }
                });
            });
        </script>
    {% endif %}
{% endblock %}